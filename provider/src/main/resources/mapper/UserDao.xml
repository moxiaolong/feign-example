<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.provider.dao.UserDao">
    <resultMap type="com.example.provider.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="account" column="account" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               username,
               age,
               real_name,
               account
        from users.user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select id,
               username,
               age,
               real_name,
               account
        from users.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, username, age, real_name, account
        from users.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="realName != null and realName != ''">
                and real_name = #{realName}
            </if>
            <if test="account != null">
                and account = #{account}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into users.user(username, age, real_name, account)
        values (#{username}, #{age}, #{realName}, #{account})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into users.user(username, age, real_name, account)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.age}, #{entity.realName}, #{entity.account})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into users.user(username, age, real_name, account)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.age}, #{entity.realName}, #{entity.account})
        </foreach>
        on duplicate key update
        username = values(username) , age = values(age) , real_name = values(real_name) , account = values(account)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update users.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>
            <if test="account != null">
                account = #{account},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from users.user
        where id = #{id}
    </delete>
</mapper>

